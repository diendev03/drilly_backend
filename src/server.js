const { spawn } = require('child_process');
const path = require('path');
const app = require('./app');
require('dotenv').config();

const PORT = process.env.PORT || 3000;

// ƒê∆∞·ªùng d·∫´n tuy·ªát ƒë·ªëi ƒë·∫øn cloudflared.exe
const tunnelPath = '"C:\\Program Files\\cloudflared\\cloudflared.exe"'; // ph·∫£i th√™m d·∫•u " "

app.listen(PORT, () => {
  console.log(`‚úÖ Server ƒëang ch·∫°y t·∫°i http://localhost:${PORT}`);

  // D√πng shell ƒë·ªÉ ch·∫°y file c√≥ kho·∫£ng tr·∫Øng trong ƒë∆∞·ªùng d·∫´n
  const tunnel = spawn(`${tunnelPath} tunnel run drill-tunnel`, {
    shell: true
  });

  tunnel.stdout.on('data', (data) => {
    const text = data.toString();
    process.stdout.write(text);

    if (text.includes('Registered tunnel connection')) {
      console.log(`üåê Cloudflare Tunnel ƒë√£ k·∫øt n·ªëi!`);
      console.log(`‚û°Ô∏è API Public t·∫°i: https://drilly.io.vn`);
    }
  });

  tunnel.stderr.on('data', (data) => {
    const err = data.toString();
    if (err.toLowerCase().includes('error') || err.toLowerCase().includes('failed')) {
      console.error('‚ùå Tunnel l·ªói th·ª±c s·ª±:', err);
    } else {
      console.log(`[TUNNEL] ${err}`);
    }
  });

  tunnel.on('close', (code) => {
    console.warn(`‚ö†Ô∏è Tunnel k·∫øt th√∫c (m√£: ${code})`);
  });
});
